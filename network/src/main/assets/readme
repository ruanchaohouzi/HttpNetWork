为了为各个模块共享网络请求库，所以将网络请求工具组件化，组件化的好处有：
1，方便为其他工程使用网络请求工具，代码解耦合；
2，方便各个模块的维护；
3，方便工程中删除和添加一个模块，使得添加和删除很容易；
4，后面如果将网络库做成jar或者aar二进制库，其他工程可以直接在对应工程（模块）的builde.gradle直接添加依赖即可。


网络库使用说明：
1，直接在自己的工程（模块）中定义请求api的接口；
2，定义一个继承自NetworkManagerHelper的类，为该类指定保存的泛型类型为请求api的接口；
3，在继承的类中定义获取数据对应的方法；
4，使用该自定义的继承子类请求网络请求。


建议：
最好不要直接在activity、fragment或view视图中进行网络请求，可以对网络请求进行包装（定义一个类），
然后在该类中进行网络请求，将网络请求的处理结果处理后使用接口回调给视图层，目的是视图层只做展示层的事情，
其他的事情交给专业的对象去处理，实质是职责单一的设计思路，方便后面的维护和升级。


兄弟们，一起为新华智云加油，为自己打call！